#include <stdio.h>
#include <string.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/select.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <errno.h>
#include <netdb.h>

#include "JSON_action.h"
#include "JSON_request_handle.h"
#include "config.h"
#include "update.h"
#include "help.h"
int main()
{
	char ip_address[100] = {};
	char DNS_address[200] = {};
	ConfigQuery ConfigBuf;
	ConfigBuf = Load_Config_String("./config/connect_config", "IP_Address", ip_address, sizeof(ip_address));
	if(ConfigBuf.DataType == -1)
	{
		ConfigBuf = Load_Config_String("./config/connect_config", "DNS_Address", DNS_address, sizeof(DNS_address));
		if(ConfigBuf.DataType == -1)
		{
			puts("[main.c] No proper config");
			return -3;
		}
		printf("[main.c] Load DNS: %s\n", DNS_address);
		struct hostent* HostInfo;

		/* get IP address from name */
		HostInfo = gethostbyname(DNS_address);

		if(!HostInfo)
		{
		    printf("[main.c] Could not resolve host name\n");
		    return -10;
		}
		sprintf(ip_address, "%hhu.%hhu.%hhu.%hhu", HostInfo->h_addr_list[0][0], HostInfo->h_addr_list[0][1], HostInfo->h_addr_list[0][2], HostInfo->h_addr_list[0][3]);
	}
	else
	{
		printf("[main.c] Load IP: %s\n", ip_address);
	}
	ConfigBuf = Load_Config_IntData("./config/connect_config", "Port");
	int port = ConfigBuf.IntData;
	printf("[main.c] Load Port: %d\n", port);


	struct sockaddr_in serveraddr;
	memset(&serveraddr, 0, sizeof(serveraddr));
	serveraddr.sin_family = PF_INET;
	serveraddr.sin_addr.s_addr = inet_addr(ip_address);
	serveraddr.sin_port = htons(port);

	while(1)
	{
	}
}
